/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2022  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 30.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("c")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("c_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("d")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("e")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ecuacion")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ecuacion[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ecuacion";
}

SIGNAL("ecuacion[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ecuacion";
}

SIGNAL("f")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("g")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ov_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("resu")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("resu[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("resu[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resu";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("z_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Asal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Asal[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Asal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Asal";
}

SIGNAL("Bsal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Bsal[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("Bsal[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bsal";
}

SIGNAL("instruccion")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instruccion[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

SIGNAL("instruccion[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruccion";
}

TRANSITION_LIST("a")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 11.5;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("b")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("c")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("c_flag")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.1;
			LEVEL 1 FOR 23.9;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("d")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 11.5;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("d1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.1;
		}
	}
}

TRANSITION_LIST("d2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.3;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("d3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.5;
		}
	}
}

TRANSITION_LIST("d4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.7;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.3;
		}
	}
}

TRANSITION_LIST("e")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 11.5;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("ecuacion[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("ecuacion[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("f")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 11.5;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("g")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 11.7;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.3;
		}
	}
}

TRANSITION_LIST("ov_flag")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.1;
			LEVEL 1 FOR 23.9;
		}
	}
}

TRANSITION_LIST("resu[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.1;
			LEVEL 1 FOR 23.9;
		}
	}
}

TRANSITION_LIST("resu[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("resu[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.1;
			LEVEL 1 FOR 23.9;
		}
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 30.0;
		}
	}
}

TRANSITION_LIST("s_flag")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("z_flag")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 24.9;
		}
	}
}

TRANSITION_LIST("Asal[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.3;
			LEVEL 1 FOR 26.7;
		}
	}
}

TRANSITION_LIST("Asal[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Asal[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 24.9;
		}
	}
}

TRANSITION_LIST("Bsal[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 24.9;
		}
	}
}

TRANSITION_LIST("Bsal[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 24.9;
		}
	}
}

TRANSITION_LIST("Bsal[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.3;
			LEVEL 1 FOR 26.7;
		}
	}
}

TRANSITION_LIST("Bsal[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 25.5;
		}
	}
}

TRANSITION_LIST("Bsal[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.1;
			LEVEL 1 FOR 24.9;
		}
	}
}

TRANSITION_LIST("Bsal[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("Bsal[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.3;
			LEVEL 1 FOR 26.7;
		}
	}
}

TRANSITION_LIST("instruccion[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 4.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 25.1;
		}
	}
}

TRANSITION_LIST("instruccion[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 1.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 1.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 1.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 24.5;
		}
	}
}

TRANSITION_LIST("instruccion[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.7;
			LEVEL 1 FOR 1.2;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 24.5;
		}
	}
}

TRANSITION_LIST("instruccion[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 3.6;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 24.5;
		}
	}
}

TRANSITION_LIST("instruccion[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("instruccion[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("instruccion[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.9;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 0.6;
			LEVEL 1 FOR 1.2;
			LEVEL 0 FOR 25.7;
		}
	}
}

TRANSITION_LIST("instruccion[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.7;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 1.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 26.9;
		}
	}
}

TRANSITION_LIST("instruccion[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
		}
	}
}

TRANSITION_LIST("instruccion[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.7;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 1.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 26.9;
		}
	}
}

TRANSITION_LIST("instruccion[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.3;
			LEVEL 1 FOR 1.2;
			LEVEL 0 FOR 24.5;
		}
	}
}

TRANSITION_LIST("instruccion[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.3;
			LEVEL 1 FOR 2.4;
			LEVEL 0 FOR 1.2;
			LEVEL 1 FOR 0.6;
			LEVEL 0 FOR 24.5;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "c";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "c_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "e";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ecuacion";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "ecuacion[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ecuacion[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "f";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "g";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ov_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "resu";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "resu[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "resu[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "z_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Asal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Asal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Bsal[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "instruccion[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 71;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
